// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuizzMS.Models.EntityFramework;

#nullable disable

namespace QuizzMS.Migrations
{
    [DbContext(typeof(QuizDbContext))]
    [Migration("20250120125717_New Model For MCQ")]
    partial class NewModelForMCQ
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QuizzMS.Models.EntityFramework.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("opt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OptionId"));

                    b.Property<bool>("EstCorrecte")
                        .HasColumnType("boolean")
                        .HasColumnName("opt_est_correcte");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer")
                        .HasColumnName("opt_questionid");

                    b.Property<string>("Texte")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("opt_texte");

                    b.HasKey("OptionId")
                        .HasName("PK_option");

                    b.HasIndex("QuestionId");

                    b.ToTable("t_e_option_opt", (string)null);
                });

            modelBuilder.Entity("QuizzMS.Models.EntityFramework.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("qst_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("QuestionId"));

                    b.Property<int>("QuizId")
                        .HasColumnType("integer")
                        .HasColumnName("qst_quizid");

                    b.Property<string>("ReponseCorrecte")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("qst_reponsecorrecte");

                    b.Property<string>("TexteDeLaQuestion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("qst_textequestion");

                    b.HasKey("QuestionId")
                        .HasName("PK_question");

                    b.HasIndex("QuizId");

                    b.ToTable("t_e_question_qst", (string)null);
                });

            modelBuilder.Entity("QuizzMS.Models.EntityFramework.Quiz", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("quz_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("QuizId"));

                    b.Property<string>("DescriptionDuQuiz")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("quz_description");

                    b.Property<string>("FilmId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("quz_filmid");

                    b.Property<string>("TitreDuFilm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("quz_titrefilm");

                    b.Property<string>("TitreDuQuiz")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("quz_titre");

                    b.HasKey("QuizId")
                        .HasName("PK_quiz");

                    b.ToTable("t_e_quiz_quz", (string)null);
                });

            modelBuilder.Entity("QuizzMS.Models.EntityFramework.Option", b =>
                {
                    b.HasOne("QuizzMS.Models.EntityFramework.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_option_question");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuizzMS.Models.EntityFramework.Question", b =>
                {
                    b.HasOne("QuizzMS.Models.EntityFramework.Quiz", "Quiz")
                        .WithMany("ListeDeQuestions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_question_quiz");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("QuizzMS.Models.EntityFramework.Question", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("QuizzMS.Models.EntityFramework.Quiz", b =>
                {
                    b.Navigation("ListeDeQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
